@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;600;700;800&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Lato:wght@100;300;400;700;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@100;200;300;400;500;600;700;800;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Lora:wght@400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Merriweather:wght@300;400;700&display=swap');



:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

@layer base {

  :root {
    --background: 210 20% 98.04%;
    --foreground: 220.91 39.29% 10.98%;
    --muted: 220 13.04% 90.98%;
    --muted-foreground: 220 8.94% 46.08%;
    --popover: 0 0% 100%;
    --popover-foreground: 220.91 39.29% 10.98%;
    --card: 0 0% 100%;
    --card-foreground: 220.91 39.29% 10.98%;
    --border: 220 13.04% 90.98%;
    --input: 220 13.04% 90.98%;
    --primary: 261.56 53.33% 47.06%;
    --primary-foreground: 0 0% 100%;
    --secondary: 0 0% 100%;
    --secondary-foreground: 220.91 39.29% 10.98%;
    --accent: 220 14.29% 95.88%;
    --accent-foreground: 220.91 39.29% 10.98%;
    --destructive: 3.96 72.8% 50.98%;
    --destructive-foreground: 0 0% 100%;
    --ring: 262.11 53.27% 79.02%;
    --chart-1: 262.11 53.27% 79.02%;
    --chart-2: 183.6 84.27% 34.9%;
    --chart-3: 40.11 80% 54.9%;
    --chart-4: 339.77 74.78% 54.9%;
    --chart-5: 220.45 70.08% 50.2%;
    --radius: 0.5rem;

    --bullet-list-item-color: #000;
  }

  .dark {
    --background: 0 0% 1.96%;
    --foreground: 0 0% 90.2%;
    --muted: 156 9% 8%;
    --muted-foreground: 0 0% 60%;
    --popover: 0 0% 6.27%;
    --popover-foreground: 0 0% 90.2%;
    --card: 0 0% 9.8%;
    --card-foreground: 0 0% 90.2%;
    --border: 0 0% 13.73%;
    --input: 0 0% 17.65%;
    --primary: 258.05 71.93% 66.47%;
    --primary-foreground: 0 0% 90.2%;
    --secondary: 0 0% 0%;
    --secondary-foreground: 0 0% 90.2%;
    --accent: 0 0% 15.69%;
    --accent-foreground: 0 0% 60%;
    --destructive: 3.95 72.93% 44.9%;
    --destructive-foreground: 0 0% 100%;
    --ring: 262.11 53.27% 79.02%;
    --chart-1: 261.82 54.1% 88.04%;
    --chart-2: 183.75 45.28% 58.43%;
    --chart-3: 40.27 76.84% 62.75%;
    --chart-4: 340 73.06% 62.16%;
    --chart-5: 220.66 71.03% 58.04%;
  }
}

/* --->  style para list bullet item --*/
li[data-content-type="listBulletItem"] {
  color: var(--bullet-list-item-color) !important;
}



.bn-list-item::before {
  content: "";
  display: inline-block;
  position: absolute;
  left: 0;
  width: 7px;
  height: 7px;
  min-width: 7px;
  min-height: 7px;
  margin-right: 7px;
  background-color: var(--bullet-list-item-color);
  border-radius: 50%;
  top: 50%;
  transform: translateY(-50%);
}

[data-resize-handle-state="inactive"].custom-handle {
  background-color: transparent !important;
}

[data-resize-handle-state="hover"].custom-handle {
  background-color: hsl(var(--primary) / 0.6) !important;
}

[data-resize-handle-state="drag"].custom-handle {
  background-color: hsl(var(--primary) / 0.6) !important;
}

[data-resize-handle-state="drag"].custom-handle:hover {
  background-color: hsl(var(--primary) / 0.6) !important;
}

[data-resize-handle-state="drag"].custom-handle:active {
  background-color: hsl(var(--primary) / 0.6) !important;
}

.bn-container {
  --bn-colors-editor-background: var(--background) !important;
}

.bn-container>div+div {
  background: hsl(var(--background) / 0.4) !important;
  border-radius: 8px !important;
  backdrop-filter: blur(7.5px);
  -webkit-backdrop-filter: blur(7.5px);
  left: -5px !important;
}

.mantine-focus-auto.bn-button:hover {
  background: hsl(var(--background) / 0.7) !important;
}

.bn-editor {
  padding-inline: 16px !important;
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    overflow: hidden;
  }

  html {
    scroll-behavior: smooth;
    overflow: hidden;
  }
}


/* Custom scrollbar styles */
@layer utilities {

  /* Hide scrollbar for Chrome, Safari and Opera */
  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }

  /* Hide scrollbar for IE, Edge and Firefox */
  .no-scrollbar {
    -ms-overflow-style: none;
    /* IE and Edge */
    scrollbar-width: none;
    /* Firefox */
  }
}

/* Animation for transitions */
@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.animate-fade-in {
  animation: fadeIn 0.3s ease-in-out;
}


.prose :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  @apply text-foreground;
}

.ProseMirror p,
.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3,
.ProseMirror ol,
.ProseMirror pre {
  padding: 1px !important;
  margin: 0 !important;
}

ul,
ol {
  padding: 0 1rem !important;
  margin: 0 0 0 0.4rem !important;

  li p {
    margin-top: 0.25em !important;
    margin-bottom: 0.25em !important;
    margin-left: -0.5rem !important;
  }
}


.lg\:prose-lg :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-left: 4px !important;
}

.lg\:prose-lg :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-bottom: 0.1rem !important;
  margin-top: 0.1rem !important;
  line-height: 1.2 !important;
}

.lg\:prose-lg :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0.5rem !important;
  margin-bottom: 0.5rem !important;
}

.sm\:prose {
  max-width: 27.1cm !important;
}

::selection {
  background-color: hsl(var(--primary) / 0.4) !important;
  color: #fff !important;
}


.ProseMirror .is-empty:has(.block-content) [data-node-view-content-react]::before {
  content: "Digite algo ou pressione '/' para comandos...";
  /* Pega o texto do atributo data-placeholder */
  float: left;
  color: #adb5bd;
  /* Cor padrão do placeholder Tiptap */
  pointer-events: none;
  height: 0;
}

.sm\:prose :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit !important;
}

.container {
  max-width: 800px;
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin: 0 auto;
}

.slot.top {
  height: 200px;
}

.middle {
  height: 250px;
  display: flex;
  gap: 10px;
}

.slot.middle-left {
  height: 100%;
  flex: 1;
}

.slot.middle-right {
  height: 100%;
  flex: 2;
}


.swapable-item:not([data-swapy-dragging]) {
  /* z-index: 1 !important; */
  overflow: visible !important;
}

[data-swapy-dragging] {
  z-index: 999999 !important;
  overflow: hidden;
  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);
}


.drag-over {
  border: 2px dashed #4a9eff;
  background-color: rgba(74, 158, 255, 0.05);
}

/* Estilização para tornar os blocos visíveis */
.ProseMirror p,
.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3,
.ProseMirror ul,
.ProseMirror ol,
.ProseMirror pre {
  margin: 0.5em 0;
  padding: 0.2em 0.4em;
  border-radius: 0.25em;
}

.ProseMirror p:hover,
.ProseMirror h1:hover,
.ProseMirror h2:hover,
.ProseMirror h3:hover,
.ProseMirror ul:hover,
.ProseMirror ol:hover,
.ProseMirror pre:hover {
  /* background-color: rgba(0, 0, 0, 0.03); */
}

/* Estilos para os handles de arrasto */
.handle-overlay {
  font-size: 14px;
  z-index: 100;
}

.handle-add {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 3px;
  transition: background-color 0.2s;
}

.handle-drag{
  @apply absolute flex items-center justify-center  rounded-sm right-[2px] top-[2px]  group-hover/grid-item:opacity-100 opacity-0 transition-opacity duration-300;
  min-height: 16px;
  min-width: 16px;
}
/* Estilo para o destino de drop */
.drag-highlight {
  outline: 2px dashed #4a9eff !important;
  background-color: rgba(74, 158, 255, 0.05) !important;
}

/* Estilos para os blocos arrastáveis */
.draggable-block {
  cursor: grab;
  position: relative;
  transition: background-color 0.2s;
}

.draggable-block:hover {
  background-color: rgba(0, 0, 0, 0.02);
}

.draggable-block:active {
  cursor: grabbing;
}

.ProseMirror .selected {
  background-color: rgba(74, 158, 255, 0.15);
  /* Exemplo: um fundo azul claro translúcido */
}

/* Tentar aumentar a especificidade para o alinhamento do Tiptap */
.ProseMirror p[style*="text-align: center"],
.ProseMirror h1[style*="text-align: center"],
.ProseMirror h2[style*="text-align: center"],
.ProseMirror h3[style*="text-align: center"] {
  text-align: center;
}

.ProseMirror p[style*="text-align: right"],
.ProseMirror h1[style*="text-align: right"],
.ProseMirror h2[style*="text-align: right"],
.ProseMirror h3[style*="text-align: right"] {
  text-align: right;
}

.ProseMirror p[style*="text-align: left"],
.ProseMirror h1[style*="text-align: left"],
.ProseMirror h2[style*="text-align: left"],
.ProseMirror h3[style*="text-align: left"] {
  /* O padrão do Prose geralmente é left, mas podemos forçar se necessário */
  text-align: left;
}


.ProseMirror h1 {
  font-size: 28px;
  line-height: 36px;
}

.ProseMirror h2 {
  font-size: 20px;
  line-height: 26px;
}

.ProseMirror h3 {
  font-size: 16px;
  line-height: 21px;
}

.ProseMirror p {
  font-size: 12px;
  line-height: 18px;
}

.ProseMirror small {
  font-size: 10px;
  line-height: 12px;
}













/* React component */
.react-component {
  background-color: hsl(var(--primary) / 0.1) !important;
  border: 2px solid hsl(var(--primary) / 0.5) !important;
  border-radius: 0.5rem;
  margin: 2rem 0;
  position: relative;

  label {
    background-color: hsl(var(--primary) / 0.5) !important;
    border-radius: 0 0 0.5rem 0;
    color: var(--white);
    font-size: 0.75rem;
    font-weight: bold;
    padding: 0.25rem 0.5rem;
    position: absolute;
    top: 0;
  }

  .content {
    margin-top: 1.5rem;
    padding: 1rem;

    &.is-editable {
      border: 2px dashed var(--gray-3);
      border-radius: 0.5rem;
      margin: 2.5rem 1rem 1rem;
      padding: 0.5rem;
    }
  }
}

.react-grid-item.grid-item{
  overflow: inherit !important;
}

.handle-drag {
  transition: opacity 0.2s ease-in-out !important;
  cursor: move !important;
  z-index: 999999 !important;
}

.react-resizable-handle {
  transition: opacity 0.2s ease-in-out !important;
}

.react-resizable-handle:hover {
  opacity: 1 !important;
}
.react-grid-item > .react-resizable-handle::after{
  /* background-color: hsl(var(--primary) / 0.7) !important; */
  border: 0 !important;
}
.react-resizable-handle{
  background-image: none !important;
}
.react-resizable-handle-sw:after{
  overflow: hidden !important;
}
.react-resizable-handle-se:after{
  overflow: hidden !important;
}
.react-resizable-handle-nw:after{
  overflow: hidden !important;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-e{
  transform: rotate(0deg) !important;
  height: 100% !important;
  top: 0 !important;
  right: 0 !important;
  margin-top: 0 !important;
  width: 4px !important;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-e::after{
  top: 0 !important;
  margin-top: 0 !important;
  height: 100% !important;
  width: 2px !important;
  right: 0px !important;
}

.react-grid-item > .react-resizable-handle.react-resizable-handle-w{
  transform: rotate(0deg) !important;
  height: 100% !important;
  top: 0 !important;
  left: 0 !important;
  margin-top: 0 !important;
  width: 4px !important;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-w::after{
  top: 0 !important;
  margin-top: 0 !important;
  height: 100% !important;
  width: 2px !important;
  left: 0px !important;
}

.react-grid-item > .react-resizable-handle.react-resizable-handle-n{
  transform: rotate(0deg) !important;
  height: 2px !important;
  top: 0 !important;
  left: 0 !important;
  margin-left: 0 !important;
  width: 100% !important;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-n::after{
  top: 0 !important;
  margin-left: 0 !important;
  height: 2px !important;
  width: 100% !important;
  left: 0px !important;
}

.react-grid-item > .react-resizable-handle.react-resizable-handle-s{
  transform: rotate(0deg)  !important;
  width: 100% !important;
  height: 2px !important;
  bottom: 0 !important; 
  left: 0 !important;
  margin-left: 0 !important;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-s::after{
  margin-left: 0 !important;
  height: 2px !important;
  width: 100% !important;
  left: 0px !important;
  bottom: 0 !important;
}

.react-grid-item > .react-resizable-handle{
  z-index: 101 !important;
}



.react-grid-item.react-grid-placeholder{
  background-color: hsl(var(--primary) / 0.1) !important;
  border: 2px dashed hsl(var(--primary) / 0.5) !important;
  border-radius: 0.5rem;
  position: relative;
}
blockquote{
  margin-left: 4px !important;
}
.sm\:prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before{
  content: none !important;
}
.lg\:prose-lg :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}


.badge {
  background-color: #0932b8;
  padding: 2px 8px;
  border-radius: 8px;
  font-size: inherit;
  font-family: sans-serif;
  margin-right: 4px;
  display: inline-block;
}


